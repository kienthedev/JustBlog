// <auto-generated />
using System;
using FA.JustBlog.Core.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FA.JustBlog.Core.Migrations
{
    [DbContext(typeof(JustBlogContext))]
    [Migration("20230831020837_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Discover skincare, makeup, and personal grooming products.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9633),
                            IsActive = true,
                            Name = "Beauty & Personal Care",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9644),
                            UrlSlug = "beauty-personal-care"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Furnish your spaces with stylish and functional furniture.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9646),
                            IsActive = true,
                            Name = "Furniture",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9647),
                            UrlSlug = "furniture"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Achieve your health and fitness goals with the right products.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9649),
                            IsActive = true,
                            Name = "Health & Fitness",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9649),
                            UrlSlug = "health-fitness"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Entertain and educate with a variety of toys and games.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9651),
                            IsActive = true,
                            Name = "Toys & Games",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9651),
                            UrlSlug = "toys-games"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Explore a world of delicious food and beverages.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9653),
                            IsActive = true,
                            Name = "Food & Beverages",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9653),
                            UrlSlug = "food-beverages"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CommentHeader")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("CommentTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentHeader = "First Comment",
                            CommentText = "This is the first comment.",
                            CommentTime = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9868),
                            Email = "user1@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9869),
                            IsActive = true,
                            Name = "User1",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9870)
                        },
                        new
                        {
                            Id = 2,
                            CommentHeader = "Insightful Thoughts",
                            CommentText = "I found this post to be quite insightful.",
                            CommentTime = new DateTime(2023, 8, 30, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9871),
                            Email = "user2@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9872),
                            IsActive = true,
                            Name = "User2",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9873)
                        },
                        new
                        {
                            Id = 3,
                            CommentHeader = "Questions and Clarifications",
                            CommentText = "I have a few questions about the concepts discussed.",
                            CommentTime = new DateTime(2023, 8, 29, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9874),
                            Email = "user3@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9876),
                            IsActive = true,
                            Name = "User3",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9876)
                        },
                        new
                        {
                            Id = 4,
                            CommentHeader = "Engaging Topic",
                            CommentText = "I'm fascinated by the subject of AI. Thanks for sharing!",
                            CommentTime = new DateTime(2023, 8, 28, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9878),
                            Email = "user4@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9879),
                            IsActive = true,
                            Name = "User4",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9879)
                        },
                        new
                        {
                            Id = 5,
                            CommentHeader = "Feedback",
                            CommentText = "The post could use some more technical details.",
                            CommentTime = new DateTime(2023, 8, 27, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9881),
                            Email = "user5@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9881),
                            IsActive = true,
                            Name = "User5",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9882)
                        },
                        new
                        {
                            Id = 6,
                            CommentHeader = "Personal Experiences",
                            CommentText = "I've been working in AI for years, and it's an exciting field.",
                            CommentTime = new DateTime(2023, 8, 26, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9884),
                            Email = "user6@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9884),
                            IsActive = true,
                            Name = "User6",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9885)
                        },
                        new
                        {
                            Id = 7,
                            CommentHeader = "Request for More Topics",
                            CommentText = "Could you cover AI in medical applications next?",
                            CommentTime = new DateTime(2023, 8, 25, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9886),
                            Email = "user7@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9887),
                            IsActive = true,
                            Name = "User7",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9888)
                        },
                        new
                        {
                            Id = 8,
                            CommentHeader = "Engaging Read",
                            CommentText = "I thoroughly enjoyed reading this post. Great job!",
                            CommentTime = new DateTime(2023, 8, 24, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9889),
                            Email = "user8@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9890),
                            IsActive = true,
                            Name = "User8",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9890)
                        },
                        new
                        {
                            Id = 9,
                            CommentHeader = "AI Enthusiast",
                            CommentText = "As an AI enthusiast, I found this post to be well-written.",
                            CommentTime = new DateTime(2023, 8, 23, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9892),
                            Email = "user9@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9892),
                            IsActive = true,
                            Name = "User9",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9893)
                        },
                        new
                        {
                            Id = 10,
                            CommentHeader = "Technical Query",
                            CommentText = "Can you elaborate more on neural networks?",
                            CommentTime = new DateTime(2023, 8, 22, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9894),
                            Email = "user10@example.com",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9895),
                            IsActive = true,
                            Name = "User10",
                            PostId = 1,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9896)
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Modified")
                        .HasColumnType("bit");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<int>("RateCount")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalRate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9802),
                            IsActive = true,
                            Modified = false,
                            PostContent = "The world of technology is evolving rapidly...",
                            PostedOn = new DateTime(2023, 7, 17, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9796),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "Exploring recent technological breakthroughs.",
                            Title = "Advancements in Technology",
                            TotalRate = 0,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9802),
                            UrlSlug = "advancements-in-technology",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9805),
                            IsActive = true,
                            Modified = false,
                            PostContent = "Summer is here, and it's time to update your wardrobe...",
                            PostedOn = new DateTime(2023, 7, 2, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9804),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "Unveiling the hottest summer fashion trends.",
                            Title = "Summer Fashion Trends",
                            TotalRate = 0,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9806),
                            UrlSlug = "summer-fashion-trends",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9808),
                            IsActive = true,
                            Modified = false,
                            PostContent = "Great literature stands the test of time...",
                            PostedOn = new DateTime(2023, 6, 17, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9807),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "Exploring timeless classics in literature.",
                            Title = "Classic Literature Masterpieces",
                            TotalRate = 0,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9809),
                            UrlSlug = "classic-literature-masterpieces",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9811),
                            IsActive = true,
                            Modified = false,
                            PostContent = "Your home should be a sanctuary of comfort and warmth...",
                            PostedOn = new DateTime(2023, 6, 2, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9810),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "Tips for crafting a cozy and inviting home.",
                            Title = "Creating a Cozy Home Space",
                            TotalRate = 0,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9812),
                            UrlSlug = "creating-cozy-home-space",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9814),
                            IsActive = true,
                            Modified = false,
                            PostContent = "Outdoor sports offer not only physical benefits but also...",
                            PostedOn = new DateTime(2023, 5, 23, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9813),
                            Published = true,
                            RateCount = 0,
                            ShortDescription = "Embracing an active lifestyle through outdoor sports.",
                            Title = "Staying Active with Outdoor Sports",
                            TotalRate = 0,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9815),
                            UrlSlug = "staying-active-outdoor-sports",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTagMap", b =>
                {
                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TagId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("PostTagMaps");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            PostId = 1,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9833),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9834)
                        },
                        new
                        {
                            TagId = 2,
                            PostId = 1,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9835),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9836)
                        },
                        new
                        {
                            TagId = 2,
                            PostId = 2,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9837),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9837)
                        },
                        new
                        {
                            TagId = 3,
                            PostId = 2,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9839),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9839)
                        },
                        new
                        {
                            TagId = 3,
                            PostId = 3,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9840),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9841)
                        },
                        new
                        {
                            TagId = 4,
                            PostId = 3,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9842),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9843)
                        },
                        new
                        {
                            TagId = 4,
                            PostId = 4,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9844),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9844)
                        },
                        new
                        {
                            TagId = 5,
                            PostId = 4,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9846),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9846)
                        },
                        new
                        {
                            TagId = 5,
                            PostId = 5,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9847),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9848)
                        },
                        new
                        {
                            TagId = 1,
                            PostId = 5,
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9849),
                            IsActive = true,
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9850)
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime?>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 6,
                            Description = "Tags related to skincare and beauty routines.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9765),
                            IsActive = true,
                            Name = "Skincare",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9766),
                            UrlSlug = "skincare"
                        },
                        new
                        {
                            Id = 2,
                            Count = 4,
                            Description = "Tags related to interior design and decor ideas.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9768),
                            IsActive = true,
                            Name = "Interior Design",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9768),
                            UrlSlug = "interior-design"
                        },
                        new
                        {
                            Id = 3,
                            Count = 9,
                            Description = "Tags related to health and holistic wellness.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9770),
                            IsActive = true,
                            Name = "Wellness",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9771),
                            UrlSlug = "wellness"
                        },
                        new
                        {
                            Id = 4,
                            Count = 2,
                            Description = "Tags related to toys and playtime.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9772),
                            IsActive = true,
                            Name = "Toys",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9773),
                            UrlSlug = "toys"
                        },
                        new
                        {
                            Id = 5,
                            Count = 11,
                            Description = "Tags related to different types of cuisines and food.",
                            InsertedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9774),
                            IsActive = true,
                            Name = "Cuisine",
                            UpdatedAt = new DateTime(2023, 8, 31, 9, 8, 36, 738, DateTimeKind.Local).AddTicks(9775),
                            UrlSlug = "cuisine"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Comment", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTagMap", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("PostTagMaps")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA.JustBlog.Core.Models.Tag", "Tag")
                        .WithMany("PostTagMaps")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostTagMaps");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Navigation("PostTagMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
